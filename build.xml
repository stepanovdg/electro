<project name="uzo" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/uzo" />
  <property name="build.layout" location="${build.dir}/artifacts/uzo" />
  <tstamp>
    <format property="date" pattern="yyyyMMdd" />
  </tstamp>
  <property name="application.name" value="Electro" />
  <property name="application.version" value="2017.11.1" />
  <property name="build.number" value="electro-172.2071" />
  <property name="mps_home" location="${basedir}/../../Documents/work/MPS 2017.2" />
  <property name="mbeddr.github.core.home" location="${basedir}/../../Documents/work/mbeddr.core" />
  <property name="artifacts.mps" location="${mps_home}" />
  <property name="artifacts.mpsStandalone" location="${mps_home}" />
  <property name="artifacts.mpsMakePlugin" location="${mps_home}/plugins" />
  <property name="artifacts.mpsWorkbench" location="${mps_home}" />
  <property name="artifacts.mps-sl-all" location="${mbeddr.github.core.home}/artifacts/mps-sl-all" />
  <property name="artifacts.com.mbeddr.platform" location="${mbeddr.github.core.home}/artifacts/com.mbeddr.platform" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property file="${artifacts.mps-sl-all}/build.properties" prefix="import.mps-sl-all" />
  <property file="${artifacts.com.mbeddr.platform}/build.properties" prefix="import.com.mbeddr.platform" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="mps-sl-all.versionNumber" value="${import.mps-sl-all.mps-sl-all.versionNumber}" />
  <property name="com.mbeddr.platform.major.version" value="${import.com.mbeddr.platform.com.mbeddr.platform.major.version}" />
  <property name="com.mbeddr.platform.minor.version" value="${import.com.mbeddr.platform.com.mbeddr.platform.minor.version}" />
  <property name="com.mbeddr.platform.build" value="${import.com.mbeddr.platform.com.mbeddr.platform.build}" />
  <property name="com.mbeddr.platform.mbeddr.version" value="${import.com.mbeddr.platform.com.mbeddr.platform.mbeddr.version}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <pathelement location="${artifacts.mps}/lib/jdom.jar" />
    <pathelement location="${artifacts.mps}/lib/log4j.jar" />
  </path>
  
  <target name="assemble" depends="classes, declare-mps-tasks, fetchDependencies">
    <mkdir dir="${build.layout}/languages" />
    <copy todir="${build.layout}/languages">
      <fileset dir="${artifacts.mpsStandalone}/languages" />
    </copy>
    <mkdir dir="${build.layout}/license" />
    <copy todir="${build.layout}/license">
      <fileset dir="${artifacts.mpsStandalone}/license" />
    </copy>
    <mkdir dir="${build.layout}/bin" />
    <copy todir="${build.layout}/bin">
      <fileset dir="${artifacts.mpsStandalone}/bin">
        <include name="log.xml" />
        <include name="log4j.dtd" />
      </fileset>
    </copy>
    <copy todir="${build.layout}/bin">
      <fileset file="${mps_home}/bin/idea.properties" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\.MPS(\w+)" replace="\.UZO2017.2" flags="g" />
        </tokenfilter>
        <tokenfilter>
          <replaceregex pattern="# (idea\.\w+\.path)" replace="\1" flags="g" />
        </tokenfilter>
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/lib" />
    <copy todir="${build.layout}/lib">
      <fileset dir="${artifacts.mpsWorkbench}/lib">
        <exclude name="MPS-src.zip" />
        <exclude name="branding.jar" />
      </fileset>
    </copy>
    <mkdir dir="${build.tmp}/default/branding.jar" />
    <mkdir dir="${build.tmp}/default/branding.jar/idea" />
    <echoxml file="${build.tmp}/default/branding.jar/idea/IdeaApplicationInfo.xml">
      <component>
        <version codename="EL" major="2017" minor="11.1" eap="false" update-channel="Electro_release" />
        <company name="Vladimir Sitnikov" url="https://twitter.com/VladimirSitnikv" />
        <build number="${build.number}" date="${date}" />
        <logo url="/splash.png" textcolor="002387" />
        <about url="/about.png" />
        <icon size32="/MPS32.png" size16="/MPS16.png" size32opaque="/MPS32.png" />
        <package code="code" />
        <names product="electro" fullname="Electro" />
        
        <welcome-screen logo-url="/logo.png" />
        
        
        <plugins url="" />
        <update-urls check="https://hardella.com/updates/updates.xml" patches="https://github.com/Hardella/ide61131/releases/download/v${application.version}" />
        
        
      </component>
    </echoxml>
    <jar destfile="${build.layout}/lib/branding.jar" duplicate="preserve">
      <fileset file="${basedir}/icons/MPS16.png" />
      <fileset file="${basedir}/icons/MPS32.png" />
      <fileset file="${basedir}/icons/logo.png" />
      <fileset file="${basedir}/icons/splash.png" />
      <fileset file="${basedir}/icons/about.png" />
      <fileset dir="${build.tmp}/default/branding.jar" />
    </jar>
    <mkdir dir="${build.layout}/plugins" />
    <mkdir dir="${build.layout}/plugins/svn4idea" />
    <copy todir="${build.layout}/plugins/svn4idea">
      <fileset dir="${artifacts.mps}/plugins/svn4idea" />
    </copy>
    <mkdir dir="${build.layout}/plugins/cvsIntegration" />
    <copy todir="${build.layout}/plugins/cvsIntegration">
      <fileset dir="${artifacts.mps}/plugins/cvsIntegration" />
    </copy>
    <mkdir dir="${build.layout}/plugins/git4idea" />
    <copy todir="${build.layout}/plugins/git4idea">
      <fileset dir="${artifacts.mps}/plugins/git4idea" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-core" />
    <copy todir="${build.layout}/plugins/mps-core">
      <fileset dir="${artifacts.mps}/plugins/mps-core" />
    </copy>
    <mkdir dir="${build.layout}/plugins/http-support" />
    <copy todir="${build.layout}/plugins/http-support">
      <fileset dir="${artifacts.mps}/plugins/http-support" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-make" />
    <copy todir="${build.layout}/plugins/mps-make">
      <fileset dir="${artifacts.mps}/plugins/mps-make" />
    </copy>
    <mkdir dir="${build.layout}/plugins/http-support" />
    <copy todir="${build.layout}/plugins/http-support">
      <fileset dir="${artifacts.mps}/plugins/http-support" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-execution-configurations" />
    <copy todir="${build.layout}/plugins/mps-execution-configurations">
      <fileset dir="${artifacts.mps}/plugins/mps-execution-configurations" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-execution-languages" />
    <copy todir="${build.layout}/plugins/mps-execution-languages">
      <fileset dir="${artifacts.mps}/plugins/mps-execution-languages" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-execution-api" />
    <copy todir="${build.layout}/plugins/mps-execution-api">
      <fileset dir="${artifacts.mps}/plugins/mps-execution-api" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-debugger-api" />
    <copy todir="${build.layout}/plugins/mps-debugger-api">
      <fileset dir="${artifacts.mps}/plugins/mps-debugger-api" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-debugger-java" />
    <copy todir="${build.layout}/plugins/mps-debugger-java">
      <fileset dir="${artifacts.mps}/plugins/mps-debugger-java" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-build" />
    <copy todir="${build.layout}/plugins/mps-build">
      <fileset dir="${artifacts.mps}/plugins/mps-build" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-testing" />
    <copy todir="${build.layout}/plugins/mps-testing">
      <fileset dir="${artifacts.mps}/plugins/mps-testing" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-vcs" />
    <copy todir="${build.layout}/plugins/mps-vcs">
      <fileset dir="${artifacts.mps}/plugins/mps-vcs" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-core" />
    <copy todir="${build.layout}/plugins/mps-core">
      <fileset dir="${artifacts.mps}/plugins/mps-core" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.com.mbeddr.platform}" />
    </copy>
    <mkdir dir="${build.layout}/plugins/electro" />
    <mkdir dir="${build.layout}/plugins/electro/META-INF" />
    <echoxml file="${build.layout}/plugins/electro/META-INF/plugin.xml">
      <idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
        <id>electro</id>
        <name>Electro</name>
        <version>${application.version}</version>
        <vendor url="https://twitter.com/VladimirSitnikv">Vladimir Sitnikov</vendor>
        <depends>jetbrains.mps.core</depends>
        <depends>com.mbeddr.platform</depends>
        
        <extensions defaultExtensionNs="com.intellij">
          <mps.LanguageLibrary dir="/languages" />
        </extensions>
      </idea-plugin>
    </echoxml>
    <mkdir dir="${build.layout}/plugins/electro/languages" />
    <mkdir dir="${build.layout}/plugins/electro/languages/electro" />
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.physical.sandbox.jar" />
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.physical.sandbox.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.github.vlsi.uzo.physical.sandbox.jar/META-INF/module.xml">
      <module namespace="com.github.vlsi.uzo.physical.sandbox" type="solution" uuid="76b44a30-32e8-4c3c-8721-55c0173b8612">
        <dependencies />
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="com.github.vlsi.uzo.physical.sandbox-src.jar" descriptor="com.github.vlsi.uzo.physical.sandbox.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.physical.sandbox.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/com.github.vlsi.uzo.physical.sandbox" />
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox" includes="icons/**, resources/**" />
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/com.github.vlsi.uzo.physical.sandbox.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/languages-com.github.vlsi.uzo.physical-sandbox-models">
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.physical.sandbox-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/com.github.vlsi.uzo.physical.sandbox.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/languages-com.github.vlsi.uzo.physical-sandbox-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.quickStart.pluginSolution.jar" />
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.quickStart.pluginSolution.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.github.vlsi.uzo.quickStart.pluginSolution.jar/META-INF/module.xml">
      <module namespace="com.github.vlsi.uzo.quickStart.pluginSolution" type="solution" uuid="f697b90d-9aed-4629-aec0-9067d78750cb">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" />
          <module ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" />
          <module ref="86441d7a-e194-42da-81a5-2161ec62a379(MPS.Workbench)" />
          <module ref="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" />
          <module ref="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" />
          <module ref="d7931714-a11c-4108-aa0e-246d86070dad(com.mbeddr.mpsutil.smodule.runtime)" />
          <module ref="a3e4657f-a76c-45bb-bbda-c764596ecc65(jetbrains.mps.baseLanguage.logging.runtime)" />
          <module ref="2d3c70e9-aab2-4870-8d8d-6036800e4103(jetbrains.mps.kernel)" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" />
          <module ref="d7eb0a2a-bd50-4576-beae-e4a89db35f20(jetbrains.mps.lang.scopes.runtime)" />
          <module ref="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" />
        </dependencies>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="com.github.vlsi.uzo.quickStart.pluginSolution-src.jar" descriptor="com.github.vlsi.uzo.quickStart.pluginSolution.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.quickStart.pluginSolution.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/com.github.vlsi.uzo.quickStart.pluginSolution" />
      <fileset dir="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution" includes="icons/**, resources/**" />
      <fileset dir="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/com.github.vlsi.uzo.quickStart.pluginSolution.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.github.vlsi.uzo.quickStart.pluginSolution-models">
      <fileset dir="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.quickStart.pluginSolution-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/com.github.vlsi.uzo.quickStart.pluginSolution.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.github.vlsi.uzo.quickStart.pluginSolution-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.physical.jar" />
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.physical.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.github.vlsi.uzo.physical.jar/META-INF/module.xml">
      <module namespace="com.github.vlsi.uzo.physical" type="language" uuid="3f520247-8a93-408a-8593-cb611ca06b6d">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" />
          <module ref="1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)" />
          <module ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" />
          <module ref="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" />
          <module ref="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" />
          <module ref="7ac49bcb-77fb-4f0f-9036-e31b86b854b2(com.mbeddr.mpsutil.grammarcells.runtime)" />
          <module ref="278dc825-2faf-4320-b29f-78b1e6994ed4(de.itemis.mps.editor.bool.runtime)" />
          <module ref="f0fff802-6d26-4d2e-b89d-391357265626(de.slisson.mps.hacks.editor)" />
          <module ref="7037b32c-9607-4f8e-81bd-1f028a4c117b(de.slisson.mps.reflection.runtime)" />
          <module ref="da21218f-a674-474d-8b4e-d59e33007003(de.slisson.mps.tables.runtime)" />
          <module ref="a3e4657f-a76c-45bb-bbda-c764596ecc65(jetbrains.mps.baseLanguage.logging.runtime)" />
          <module ref="d44dab97-aaac-44cb-9745-8a14db674c03(jetbrains.mps.baseLanguage.tuples.runtime)" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" />
          <module ref="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" />
        </dependencies>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="com.github.vlsi.uzo.physical-src.jar" descriptor="com.github.vlsi.uzo.physical.mpl" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.physical.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/com.github.vlsi.uzo.physical" />
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical" includes="icons/**, resources/**" />
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/com.github.vlsi.uzo.physical.jar" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.physical-generator.jar" />
    <mkdir dir="${build.tmp}/default/com.github.vlsi.uzo.physical-generator.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.github.vlsi.uzo.physical-generator.jar/META-INF/module.xml">
      <module namespace="com.github.vlsi.uzo.physical#1223925554945809591" type="generator" uuid="6f71d813-7a94-4b83-93ba-613a9e770005">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" />
        </dependencies>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="com.github.vlsi.uzo.physical-src.jar" descriptor="com.github.vlsi.uzo.physical.mpl" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.physical-generator.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/com.github.vlsi.uzo.physical#1223925554945809591" />
      <fileset dir="${build.tmp}/default/com.github.vlsi.uzo.physical-generator.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/languages-com.github.vlsi.uzo.physical-generator-template">
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/generator/template" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/languages-com.github.vlsi.uzo.physical-models">
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/plugins/electro/languages/electro/com.github.vlsi.uzo.physical-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/generator/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <fileset dir="${basedir}/languages/com.github.vlsi.uzo.physical/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/languages/com.github.vlsi.uzo.physical/com.github.vlsi.uzo.physical.mpl" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/languages-com.github.vlsi.uzo.physical-generator-template" prefix="module/generator/template" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/languages-com.github.vlsi.uzo.physical-models" prefix="module/models" />
    </jar>
    <echo file="${build.layout}/build.number">build.number=${build.number}${line.separator}date=${date}${line.separator}version=${application.version}</echo>
    <echo file="${build.layout}/build.properties">uzo.date=${date}${line.separator}uzo.application.name=${application.name}${line.separator}uzo.application.version=${application.version}${line.separator}uzo.build.number=${build.number}${line.separator}mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}${line.separator}mps-sl-all.versionNumber=${mps-sl-all.versionNumber}${line.separator}com.mbeddr.platform.major.version=${com.mbeddr.platform.major.version}${line.separator}com.mbeddr.platform.minor.version=${com.mbeddr.platform.minor.version}${line.separator}com.mbeddr.platform.build=${com.mbeddr.platform.build}${line.separator}com.mbeddr.platform.mbeddr.version=${com.mbeddr.platform.mbeddr.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.com.github.vlsi.uzo.physical.sandbox, java.compile.com.github.vlsi.uzo.quickStart.pluginSolution, java.compile.com.github.vlsi.uzo.physical, java.compile.com.github.vlsi.uzo.physical#1223925554945809591" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate strictMode="true" parallelMode="true" parallelThreads="8" useInplaceTransform="false" hideWarnings="false" createStaticRefs="true" fork="true">
      <plugin path="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.common" />
      <plugin path="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.filepicker" />
      <plugin path="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.grammarcells" />
      <plugin path="${artifacts.com.mbeddr.platform}/mbeddr.mpsutil" />
      <plugin path="${artifacts.com.mbeddr.platform}/mbeddr.platform" />
      <plugin path="${artifacts.mps-sl-all}/de-itemis-mps-selection" />
      <plugin path="${artifacts.mps-sl-all}/de.itemis.mps.celllayout" />
      <plugin path="${artifacts.mps-sl-all}/de.itemis.mps.editor.diagram" />
      <plugin path="${artifacts.mps-sl-all}/de.itemis.mps.editor.layout" />
      <plugin path="${artifacts.mps-sl-all}/de.itemis.mps.editor.widgets" />
      <plugin path="${artifacts.mps-sl-all}/de.itemis.mps.tooltips" />
      <plugin path="${artifacts.mps-sl-all}/de.slisson.mps.conditionalEditor" />
      <plugin path="${artifacts.mps-sl-all}/de.slisson.mps.hacks" />
      <plugin path="${artifacts.mps-sl-all}/mps-apache-commons" />
      <plugin path="${artifacts.mps-sl-all}/mps-multiline" />
      <plugin path="${artifacts.mps-sl-all}/mps-richtext" />
      <plugin path="${artifacts.mps}/plugins/mps-build" />
      <plugin path="${artifacts.mps}/plugins/mps-core/META-INF/plugin.xml/../.." />
      <plugin path="${artifacts.mps}/plugins/mps-debugger-api" />
      <plugin path="${artifacts.mps}/plugins/mps-execution-api" />
      <plugin path="${artifacts.mps}/plugins/mps-testing" />
      <library file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.grammarcells/languages/group.grammarcells/com.mbeddr.mpsutil.grammarcells.jar" />
      <library file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.grammarcells/languages/group.grammarcells/com.mbeddr.mpsutil.grammarcells.runtime.jar" />
      <library file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.grammarcells/languages/group.grammarcells/com.mbeddr.mpsutil.grammarcells.runtimelang.jar" />
      <library file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.smodule/languages/group.smodule/com.mbeddr.mpsutil.smodule.jar" />
      <library file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.smodule/languages/group.smodule/com.mbeddr.mpsutil.smodule.runtime.jar" />
      <library file="${artifacts.mps-sl-all}/de-itemis-mps-selection/languages/de.itemis.mps.selection/de.itemis.mps.selection.runtime.jar" />
      <library file="${artifacts.mps-sl-all}/de.itemis.mps.celllayout/languages/de.itemis.mps.celllayout/de.itemis.mps.editor.celllayout.runtime.jar" />
      <library file="${artifacts.mps-sl-all}/de.itemis.mps.celllayout/languages/de.itemis.mps.celllayout/de.itemis.mps.editor.celllayout.styles.jar" />
      <library file="${artifacts.mps-sl-all}/de.itemis.mps.editor.widgets/languages/de.itemis.mps.editor.widgets/de.itemis.mps.editor.bool.jar" />
      <library file="${artifacts.mps-sl-all}/de.itemis.mps.editor.widgets/languages/de.itemis.mps.editor.widgets/de.itemis.mps.editor.bool.runtime.jar" />
      <library file="${artifacts.mps-sl-all}/de.slisson.mps.hacks/languages/de.slisson.mps.hacks/de.slisson.mps.hacks.editor.jar" />
      <library file="${artifacts.mps-sl-all}/de.slisson.mps.hacks/languages/de.slisson.mps.hacks/de.slisson.mps.reflection.runtime.jar" />
      <library file="${artifacts.mps-sl-all}/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.customcell.jar" />
      <library file="${artifacts.mps-sl-all}/mps-tables/languages/mps-tables/de.slisson.mps.tables.jar" />
      <library file="${artifacts.mps-sl-all}/mps-tables/languages/mps-tables/de.slisson.mps.tables.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.extensionMethods.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/devkits/jetbrains.mps.devkit.language-descriptor.devkit" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.access.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.descriptor.aspects.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.descriptor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.extension.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.reduced.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.tool.gentest.jar" />
      <library file="${artifacts.mps}/languages/workbench/jetbrains.mps.lang.plugin.standalone.jar" />
      <library file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
      <library file="${artifacts.mps}/lib/mps-behavior-api.jar" />
      <library file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
      <library file="${artifacts.mps}/lib/mps-closures.jar" />
      <library file="${artifacts.mps}/lib/mps-collections.jar" />
      <library file="${artifacts.mps}/lib/mps-core.jar" />
      <library file="${artifacts.mps}/lib/mps-editor.jar" />
      <library file="${artifacts.mps}/lib/mps-environment.jar" />
      <library file="${artifacts.mps}/lib/mps-openapi.jar" />
      <library file="${artifacts.mps}/lib/mps-platform.jar" />
      <library file="${artifacts.mps}/lib/mps-stubs.jar" />
      <library file="${artifacts.mps}/lib/mps-test.jar" />
      <library file="${artifacts.mps}/lib/mps-tool.jar" />
      <library file="${artifacts.mps}/lib/mps-tuples.jar" />
      <library file="${artifacts.mps}/lib/mps-workbench.jar" />
      <library file="${artifacts.mps}/plugins/mps-core/languages/util/jetbrains.mps.core.properties.jar" />
      <chunk>
        <module file="${basedir}/languages/com.github.vlsi.uzo.physical/com.github.vlsi.uzo.physical.mpl" />
        <module file="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/com.github.vlsi.uzo.quickStart.pluginSolution.msd" />
      </chunk>
      <chunk>
        <module file="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/com.github.vlsi.uzo.physical.sandbox.msd" />
      </chunk>
      <jvmargs>
        <arg value="-Xmx512m" />
      </jvmargs>
      <macro name="mps_home" path="${mps_home}" />
      <macro name="mbeddr.github.core.home" path="${mbeddr.github.core.home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  </target>
  
  <target name="makeDependents" />
  
  <target name="java.compile.com.github.vlsi.uzo.physical.sandbox">
    <mkdir dir="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.github.vlsi.uzo.physical.sandbox" />
    <javac destdir="${build.tmp}/java/out/com.github.vlsi.uzo.physical.sandbox" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/source_gen" />
      </src>
      <classpath />
    </javac>
  </target>
  
  <target name="java.compile.com.github.vlsi.uzo.quickStart.pluginSolution" depends="java.compile.com.github.vlsi.uzo.physical, fetchDependencies">
    <mkdir dir="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.github.vlsi.uzo.quickStart.pluginSolution" />
    <javac destdir="${build.tmp}/java/out/com.github.vlsi.uzo.quickStart.pluginSolution" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-boot-util.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <pathelement path="${build.tmp}/java/out/com.github.vlsi.uzo.physical" />
        <fileset file="${artifacts.mps}/lib/mps-icons.jar" />
        <fileset file="${artifacts.mps}/lib/mps-workbench.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.6.2.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.smodule/languages/group.smodule/com.mbeddr.mpsutil.smodule.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.github.vlsi.uzo.physical" depends="fetchDependencies">
    <mkdir dir="${basedir}/languages/com.github.vlsi.uzo.physical/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.github.vlsi.uzo.physical" />
    <javac destdir="${build.tmp}/java/out/com.github.vlsi.uzo.physical" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/languages/com.github.vlsi.uzo.physical/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-boot-util.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.6.2.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${artifacts.com.mbeddr.platform}/com.mbeddr.mpsutil.grammarcells/languages/group.grammarcells/com.mbeddr.mpsutil.grammarcells.runtime.jar" />
        <fileset file="${artifacts.mps-sl-all}/de.itemis.mps.editor.widgets/languages/de.itemis.mps.editor.widgets/de.itemis.mps.editor.bool.runtime.jar" />
        <fileset file="${artifacts.mps-sl-all}/de.itemis.mps.celllayout/languages/de.itemis.mps.celllayout/de.itemis.mps.editor.celllayout.runtime.jar" />
        <fileset file="${artifacts.mps-sl-all}/de-itemis-mps-selection/languages/de.itemis.mps.selection/de.itemis.mps.selection.runtime.jar" />
        <fileset file="${artifacts.mps-sl-all}/de.slisson.mps.hacks/languages/de.slisson.mps.hacks/de.slisson.mps.hacks.editor.jar" />
        <fileset file="${artifacts.mps-sl-all}/de.slisson.mps.hacks/languages/de.slisson.mps.hacks/de.slisson.mps.reflection.runtime.jar" />
        <fileset file="${artifacts.mps-sl-all}/mps-tables/languages/mps-tables/de.slisson.mps.tables.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.descriptor.aspects.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.github.vlsi.uzo.physical#1223925554945809591" depends="java.compile.com.github.vlsi.uzo.physical, fetchDependencies">
    <mkdir dir="${basedir}/languages/com.github.vlsi.uzo.physical/generator/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.github.vlsi.uzo.physical#1223925554945809591" />
    <javac destdir="${build.tmp}/java/out/com.github.vlsi.uzo.physical#1223925554945809591" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/languages/com.github.vlsi.uzo.physical/generator/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-boot-util.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <pathelement path="${build.tmp}/java/out/com.github.vlsi.uzo.physical" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.6.2.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/languages/com.github.vlsi.uzo.physical/source_gen" />
    <delete dir="${basedir}/languages/com.github.vlsi.uzo.physical/generator/source_gen" />
    <delete dir="${basedir}/solutions/com.github.vlsi.uzo.quickStart.pluginSolution/source_gen" />
    <delete dir="${basedir}/languages/com.github.vlsi.uzo.physical/sandbox/source_gen" />
  </target>
</project>